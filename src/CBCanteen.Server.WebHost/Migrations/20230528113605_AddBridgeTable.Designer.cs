// <auto-generated />
using System;
using CBCanteen.Server.Data.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CBCanteen.Server.WebHost.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20230528113605_AddBridgeTable")]
    partial class AddBridgeTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CBCanteen.Server.Data.Models.Canteen.DailyOrder", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DateOfConsumption")
                        .HasColumnType("datetime2");

                    b.Property<string>("MenuOneId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MenuTwoId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("MenuOneId");

                    b.HasIndex("MenuTwoId");

                    b.ToTable("DailyOrders");
                });

            modelBuilder.Entity("CBCanteen.Server.Data.Models.Canteen.DailyOrderMeal", b =>
                {
                    b.Property<string>("DailyOrderId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MealId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("DailyOrderId", "MealId");

                    b.HasIndex("MealId");

                    b.ToTable("DailyOrderMeals");
                });

            modelBuilder.Entity("CBCanteen.Server.Data.Models.Canteen.Meal", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Category")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("UnitPrice")
                        .HasColumnType("float");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Meals");
                });

            modelBuilder.Entity("CBCanteen.Server.Data.Models.Canteen.Menu", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AppetizerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DessertId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MainDishId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("AppetizerId");

                    b.HasIndex("DessertId");

                    b.HasIndex("MainDishId");

                    b.ToTable("Menus");
                });

            modelBuilder.Entity("CBCanteen.Server.Data.Models.Canteen.MenuPrice", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("MenuPrices");
                });

            modelBuilder.Entity("CBCanteen.Server.Data.Models.Canteen.DailyOrder", b =>
                {
                    b.HasOne("CBCanteen.Server.Data.Models.Canteen.Menu", "MenuOne")
                        .WithMany()
                        .HasForeignKey("MenuOneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CBCanteen.Server.Data.Models.Canteen.Menu", "MenuTwo")
                        .WithMany()
                        .HasForeignKey("MenuTwoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MenuOne");

                    b.Navigation("MenuTwo");
                });

            modelBuilder.Entity("CBCanteen.Server.Data.Models.Canteen.DailyOrderMeal", b =>
                {
                    b.HasOne("CBCanteen.Server.Data.Models.Canteen.DailyOrder", "DailyOrder")
                        .WithMany()
                        .HasForeignKey("DailyOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CBCanteen.Server.Data.Models.Canteen.Meal", "Meal")
                        .WithMany()
                        .HasForeignKey("MealId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DailyOrder");

                    b.Navigation("Meal");
                });

            modelBuilder.Entity("CBCanteen.Server.Data.Models.Canteen.Menu", b =>
                {
                    b.HasOne("CBCanteen.Server.Data.Models.Canteen.Meal", "Appetizer")
                        .WithMany()
                        .HasForeignKey("AppetizerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CBCanteen.Server.Data.Models.Canteen.Meal", "Dessert")
                        .WithMany()
                        .HasForeignKey("DessertId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CBCanteen.Server.Data.Models.Canteen.Meal", "MainDish")
                        .WithMany()
                        .HasForeignKey("MainDishId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Appetizer");

                    b.Navigation("Dessert");

                    b.Navigation("MainDish");
                });
#pragma warning restore 612, 618
        }
    }
}
