@using CBCanteen.Client.Services.Contracts;
@using CBCanteen.Shared.Models.Canteen.Meal;
@using CBCanteen.Shared.Models.Canteen.Menu;
@using CBCanteen.Shared.Models.Canteen.Stats;
@using Microsoft.IdentityModel.Tokens
@using Syncfusion.Blazor.Grids

@inject IStatsService StatsService

<div class="flex space-y-4 flex-col mt-2">
    @foreach (var order in Orders)
    {
        <p>@order.Date</p>
        @if (order.UserOrders.IsNullOrEmpty())
        {
            <p>Няма направени пръчки за @order.Date.ToShortDateString()</p>
        }
        else
        {
            <SfGrid DataSource="@order.UserOrders" AllowSorting="true">
                <GridColumns>
                    <GridColumn Field=@nameof(UserOrderStats.UserName) HeaderText="Име" Width="150"></GridColumn>
                    <GridColumn HeaderText="Менюта" Width="120">
                        <Template>
                            @{
                                @foreach (var menu in (context as UserOrderStats)?.Menus!)
                                {
                                    <div class="flex space-x-2">
                                        <div class="flex items-center ">
                                            <p>@menu.Quantity</p>
                                        </div>
                                        <div>
                                            <p>@menu.Menu.Appetizer.Name</p>
                                            <p>@menu.Menu.MainDish.Name</p>
                                            <p>@menu.Menu.Dessert.Name</p>
                                        </div>
                                    </div>
                                    @if (menu == (context as UserOrderStats)?.Menus!.Last())
                                    {
                                        <hr/>
                                    }
                                }
                            }
                        </Template>
                    </GridColumn>
                    <GridColumn HeaderText="Ястия"  Width="130">
                        <Template>
                            @{
                                @foreach (var meal in (context as UserOrderStats)?.Meals!)
                                {
                                    <p>@meal.Quantity - @meal.Meal.Name</p>
                                    @if (meal == (context as UserOrderStats)?.Meals!.Last())
                                    {
                                        <hr/>
                                    }
                                }
                            }
                        </Template>
                    </GridColumn>
                </GridColumns>
            </SfGrid>
        }
    }
</div>

@code {
    [Parameter]
    public DateTime StartTime { get; set; }

    [Parameter]
    public DateTime EndTime { get; set; }
    
    [Parameter]
    public EventCallback<DateTime> StartTimeChanged { get; set; }

    [Parameter]
    public EventCallback<DateTime> EndTimeChanged { get; set; }

    private List<OrderStats> Orders { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        Orders = await StatsService.GetOrdersInRangeAsync(DateOnly.FromDateTime(StartTime), DateOnly.FromDateTime(EndTime));
        await base.OnInitializedAsync();
    }

    protected override async Task OnParametersSetAsync()
    {
        Orders = await StatsService.GetOrdersInRangeAsync(DateOnly.FromDateTime(StartTime), DateOnly.FromDateTime(EndTime));
        await base.OnParametersSetAsync();
    }
}