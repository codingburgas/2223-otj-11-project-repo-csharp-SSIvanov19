<div class="flex items-center select-none @StyleClass">
    <div class="@GetStyleClass()" @onmousedown="Toggle">
        @if(IsChecked)
        {
            <Tick StyleClass="w-4 h-4" />
        }
        else
        {
            <Cross StyleClass="w-4 h-4" />
        }
    </div>
    <p class="text text-2xl text-[#474747]">@Text</p>
    @if (!string.IsNullOrEmpty(TooltipText))
    {
        <TooltipSign StyleClass="w-6 h-6 ml-2" TooltipText="@TooltipText" />
    }

</div>

@code {
    [Parameter]
    public string Text { get; set; } = string.Empty;

    [Parameter]
    public string TooltipText { get; set; } = string.Empty;

    [Parameter]
    public string StyleClass { get; set; } = string.Empty;

    [Parameter]
    public bool IsChecked { get; set; } = false;

    [Parameter]
    public EventCallback<bool> OnButtonChange { get; set; }

    private async void Toggle()
    {
        IsChecked = !IsChecked;
        await OnButtonChange.InvokeAsync(IsChecked);
    }

    private string GetStyleClass()
    {
        return IsChecked ? "w-7 h-7 rounded-lg border-2 border-[#6EC700] mr-2 cursor-pointer bg-[#6EC700] bg-opacity-25 flex items-center justify-center" : "w-7 h-7 rounded-lg border-2 border-[#FF0000] mr-2 cursor-pointer bg-[#FF0000] bg-opacity-25 flex items-center justify-center";
    }
}