// <auto-generated />
 
using System;
using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace CBCanteen.Server.Data.Migrations
{
    /// <inheritdoc />
    public partial class Initial : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.CreateTable(
                name: "LunchHours",
                columns: table => new
                {
                    Id = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    DayOfWeek = table.Column<int>(type: "int", nullable: false),
                    StartTime = table.Column<TimeSpan>(type: "time", nullable: false),
                    EndTime = table.Column<TimeSpan>(type: "time", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_LunchHours", x => x.Id);
                });

            migrationBuilder.CreateTable(
                name: "Meals",
                columns: table => new
                {
                    Id = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Name = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    UnitPrice = table.Column<double>(type: "float", nullable: false),
                    Weight = table.Column<int>(type: "int", nullable: false),
                    Category = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Meals", x => x.Id);
                });

            migrationBuilder.CreateTable(
                name: "MenuPrices",
                columns: table => new
                {
                    Id = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Price = table.Column<double>(type: "float", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MenuPrices", x => x.Id);
                });

            migrationBuilder.CreateTable(
                name: "UserPreferences",
                columns: table => new
                {
                    UserId = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ShowMeetings = table.Column<bool>(type: "bit", nullable: false),
                    SendEmail = table.Column<bool>(type: "bit", nullable: false),
                    CreateReminder = table.Column<bool>(type: "bit", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_UserPreferences", x => x.UserId);
                });

            migrationBuilder.CreateTable(
                name: "UserLunchHours",
                columns: table => new
                {
                    UserId = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    HasSameLunchHours = table.Column<bool>(type: "bit", nullable: false),
                    MondayLunchHoursId = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    TuesdayLunchTimeId = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    WednesdayLunchTimeId = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    ThursdayLunchTimeId = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    FridayLunchTimeId = table.Column<string>(type: "nvarchar(450)", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_UserLunchHours", x => x.UserId);
                    table.ForeignKey(
                        name: "FK_UserLunchHours_LunchHours_FridayLunchTimeId",
                        column: x => x.FridayLunchTimeId,
                        principalTable: "LunchHours",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "FK_UserLunchHours_LunchHours_MondayLunchHoursId",
                        column: x => x.MondayLunchHoursId,
                        principalTable: "LunchHours",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.NoAction);
                    table.ForeignKey(
                        name: "FK_UserLunchHours_LunchHours_ThursdayLunchTimeId",
                        column: x => x.ThursdayLunchTimeId,
                        principalTable: "LunchHours",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.NoAction);
                    table.ForeignKey(
                        name: "FK_UserLunchHours_LunchHours_TuesdayLunchTimeId",
                        column: x => x.TuesdayLunchTimeId,
                        principalTable: "LunchHours",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.NoAction);
                    table.ForeignKey(
                        name: "FK_UserLunchHours_LunchHours_WednesdayLunchTimeId",
                        column: x => x.WednesdayLunchTimeId,
                        principalTable: "LunchHours",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.NoAction);
                });

            migrationBuilder.CreateTable(
                name: "MealOrders",
                columns: table => new
                {
                    Id = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    UserId = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    MealId = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Quantity = table.Column<int>(type: "int", nullable: false),
                    Date = table.Column<DateTime>(type: "datetime2", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MealOrders", x => x.Id);
                    table.ForeignKey(
                        name: "FK_MealOrders_Meals_MealId",
                        column: x => x.MealId,
                        principalTable: "Meals",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "Menus",
                columns: table => new
                {
                    Id = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    AppetizerId = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    MainDishId = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    DessertId = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Price = table.Column<double>(type: "float", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Menus", x => x.Id);
                    table.ForeignKey(
                        name: "FK_Menus_Meals_AppetizerId",
                        column: x => x.AppetizerId,
                        principalTable: "Meals",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "FK_Menus_Meals_DessertId",
                        column: x => x.DessertId,
                        principalTable: "Meals",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.NoAction);
                    table.ForeignKey(
                        name: "FK_Menus_Meals_MainDishId",
                        column: x => x.MainDishId,
                        principalTable: "Meals",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.NoAction);
                });

            migrationBuilder.CreateTable(
                name: "DailyOrders",
                columns: table => new
                {
                    Id = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    MenuOneId = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    MenuTwoId = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    DateOfConsumption = table.Column<DateTime>(type: "datetime2", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_DailyOrders", x => x.Id);
                    table.ForeignKey(
                        name: "FK_DailyOrders_Menus_MenuOneId",
                        column: x => x.MenuOneId,
                        principalTable: "Menus",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "FK_DailyOrders_Menus_MenuTwoId",
                        column: x => x.MenuTwoId,
                        principalTable: "Menus",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.NoAction);
                });

            migrationBuilder.CreateTable(
                name: "MenuOrders",
                columns: table => new
                {
                    Id = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    UserId = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    MenuId = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Quantity = table.Column<int>(type: "int", nullable: false),
                    Date = table.Column<DateTime>(type: "datetime2", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_MenuOrders", x => x.Id);
                    table.ForeignKey(
                        name: "FK_MenuOrders_Menus_MenuId",
                        column: x => x.MenuId,
                        principalTable: "Menus",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "DailyOrderMeals",
                columns: table => new
                {
                    DailyOrderId = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    MealId = table.Column<string>(type: "nvarchar(450)", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_DailyOrderMeals", x => new { x.DailyOrderId, x.MealId });
                    table.ForeignKey(
                        name: "FK_DailyOrderMeals_DailyOrders_DailyOrderId",
                        column: x => x.DailyOrderId,
                        principalTable: "DailyOrders",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "FK_DailyOrderMeals_Meals_MealId",
                        column: x => x.MealId,
                        principalTable: "Meals",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.NoAction);
                });

            migrationBuilder.CreateIndex(
                name: "IX_DailyOrderMeals_MealId",
                table: "DailyOrderMeals",
                column: "MealId");

            migrationBuilder.CreateIndex(
                name: "IX_DailyOrders_MenuOneId",
                table: "DailyOrders",
                column: "MenuOneId");

            migrationBuilder.CreateIndex(
                name: "IX_DailyOrders_MenuTwoId",
                table: "DailyOrders",
                column: "MenuTwoId");

            migrationBuilder.CreateIndex(
                name: "IX_MealOrders_MealId",
                table: "MealOrders",
                column: "MealId");

            migrationBuilder.CreateIndex(
                name: "IX_MenuOrders_MenuId",
                table: "MenuOrders",
                column: "MenuId");

            migrationBuilder.CreateIndex(
                name: "IX_Menus_AppetizerId",
                table: "Menus",
                column: "AppetizerId");

            migrationBuilder.CreateIndex(
                name: "IX_Menus_DessertId",
                table: "Menus",
                column: "DessertId");

            migrationBuilder.CreateIndex(
                name: "IX_Menus_MainDishId",
                table: "Menus",
                column: "MainDishId");

            migrationBuilder.CreateIndex(
                name: "IX_UserLunchHours_FridayLunchTimeId",
                table: "UserLunchHours",
                column: "FridayLunchTimeId");

            migrationBuilder.CreateIndex(
                name: "IX_UserLunchHours_MondayLunchHoursId",
                table: "UserLunchHours",
                column: "MondayLunchHoursId");

            migrationBuilder.CreateIndex(
                name: "IX_UserLunchHours_ThursdayLunchTimeId",
                table: "UserLunchHours",
                column: "ThursdayLunchTimeId");

            migrationBuilder.CreateIndex(
                name: "IX_UserLunchHours_TuesdayLunchTimeId",
                table: "UserLunchHours",
                column: "TuesdayLunchTimeId");

            migrationBuilder.CreateIndex(
                name: "IX_UserLunchHours_WednesdayLunchTimeId",
                table: "UserLunchHours",
                column: "WednesdayLunchTimeId");
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropTable(
                name: "DailyOrderMeals");

            migrationBuilder.DropTable(
                name: "MealOrders");

            migrationBuilder.DropTable(
                name: "MenuOrders");

            migrationBuilder.DropTable(
                name: "MenuPrices");

            migrationBuilder.DropTable(
                name: "UserLunchHours");

            migrationBuilder.DropTable(
                name: "UserPreferences");

            migrationBuilder.DropTable(
                name: "DailyOrders");

            migrationBuilder.DropTable(
                name: "LunchHours");

            migrationBuilder.DropTable(
                name: "Menus");

            migrationBuilder.DropTable(
                name: "Meals");
        }
    }
}
